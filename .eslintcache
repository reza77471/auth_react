[{"C:\\Semester2\\new2\\react1\\src\\index.js":"1","C:\\Semester2\\new2\\react1\\src\\App.js":"2","C:\\Semester2\\new2\\react1\\src\\reportWebVitals.js":"3","C:\\Semester2\\new2\\react1\\src\\pages\\pages.js":"4","C:\\Semester2\\new2\\react1\\src\\pages\\pegawai.js":"5","C:\\Semester2\\new2\\react1\\src\\pages\\Pages.js":"6","C:\\Semester2\\new2\\react1\\src\\pages\\Pegawai.js":"7","C:\\Semester2\\new2\\react1\\src\\pages\\Home.js":"8","C:\\Semester2\\new2\\react1\\src\\pages\\Login.js":"9","C:\\Semester2\\new2\\react1\\src\\components\\navbar.js":"10","C:\\Semester2\\new2\\react1\\src\\pages\\Register.js":"11","C:\\Semester2\\new2\\react1\\src\\pages\\Pelanggaran.js":"12","C:\\Semester2\\new2\\react1\\src\\pages\\Siswa.js":"13","C:\\Semester2\\new2\\react1\\src\\pages\\Jurusan.js":"14","C:\\Semester2\\new2\\react1\\src\\pages\\pelanggaran_siswa.js":"15"},{"size":546,"mtime":1616769944183,"results":"16","hashOfConfig":"17"},{"size":301,"mtime":1616770093970,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":280,"mtime":1612225693022,"results":"20","hashOfConfig":"17"},{"size":10038,"mtime":1612226575601,"results":"21","hashOfConfig":"17"},{"size":890,"mtime":1617027601349,"results":"22","hashOfConfig":"17"},{"size":7627,"mtime":1617024773740,"results":"23","hashOfConfig":"17"},{"size":4959,"mtime":1617028009593,"results":"24","hashOfConfig":"17"},{"size":3313,"mtime":1617024156383,"results":"25","hashOfConfig":"17"},{"size":1243,"mtime":1617027825723,"results":"26","hashOfConfig":"17"},{"size":3358,"mtime":1617024028121,"results":"27","hashOfConfig":"17"},{"size":7798,"mtime":1616157733110,"results":"28","hashOfConfig":"17"},{"size":9396,"mtime":1617025185440,"results":"29","hashOfConfig":"17"},{"size":7686,"mtime":1617025615329,"results":"30","hashOfConfig":"17"},{"size":15885,"mtime":1617027531572,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"iqxpv2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},"C:\\Semester2\\new2\\react1\\src\\index.js",[],["66","67"],"C:\\Semester2\\new2\\react1\\src\\App.js",[],"C:\\Semester2\\new2\\react1\\src\\reportWebVitals.js",[],"C:\\Semester2\\new2\\react1\\src\\pages\\pages.js",[],"C:\\Semester2\\new2\\react1\\src\\pages\\pegawai.js",[],"C:\\Semester2\\new2\\react1\\src\\pages\\Pages.js",[],"C:\\Semester2\\new2\\react1\\src\\pages\\Pegawai.js",[],"C:\\Semester2\\new2\\react1\\src\\pages\\Home.js",[],"C:\\Semester2\\new2\\react1\\src\\pages\\Login.js",["68","69","70"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport Register from './Register'\r\nimport {Card, Form, Button, Container} from 'react-bootstrap'\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Login extends React.Component {\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            message: \"\",\r\n            logged: true\r\n        }\r\n    }\r\n    Login = event => {\r\n        const base_url = \"http://localhost:2910\"\r\n        event.preventDefault()\r\n        let sendData = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        let url = base_url + \"/login\"\r\n        \r\n        axios.post(url, sendData)\r\n        .then(response => {\r\n            this.setState({logged: response.data.logged})\r\n            if (this.state.logged) {\r\n                let user = response.data.data\r\n                let token = response.data.token\r\n                localStorage.setItem(\"user\", JSON.stringify(user))\r\n                localStorage.setItem(\"token\", token)\r\n                this.props.history.push(\"/pegawai\")\r\n            } else {\r\n                this.setState({message: response.data.message})\r\n            }\r\n        })\r\n        .catch(error => alert(error))\r\n    }\r\n    render () {\r\n        return(\r\n            <Container className=\"container d-flex justify-content-center align-items-center\">\r\n                <Card className=\"col-sm-6 card my-5\">\r\n                <Card.Header className=\"card-header bg-primary text-white text-center\">LOGIN</Card.Header>\r\n                <Card.Body>\r\n                    { !this.state.logged ? \r\n                        (\r\n                            <div className=\"alert alert-danger mt-1\">\r\n                                { this.state.message }\r\n                            </div>\r\n                        ) : null }\r\n                    <Form onSubmit={ev => this.Login(ev)}>\r\n                    <Card.Text>\r\n                        <Form.Group controlId=\"username\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Username\" value={this.state.username}\r\n                            onChange={ev => this.setState({username: ev.target.value})}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password}\r\n                            onChange={ev => this.setState({password: ev.target.value})}\r\n                            autoComplete=\"false\" />\r\n                        </Form.Group>\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n                <center><p class=\"bg-success text-white\">Dont have an account yet? Register Now!</p></center>\r\n                <Button variant=\"primary\" type=\"submit\"><Link to=\"/register\"><strong class=\"text-white\">REGISTER</strong></Link></Button>\r\n                </Card>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","C:\\Semester2\\new2\\react1\\src\\components\\navbar.js",[],"C:\\Semester2\\new2\\react1\\src\\pages\\Register.js",[],"C:\\Semester2\\new2\\react1\\src\\pages\\Pelanggaran.js",[],"C:\\Semester2\\new2\\react1\\src\\pages\\Siswa.js",["71"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport NavBar from '../components/navbar'\r\nimport {Button,Modal, Table, Card, Form} from 'react-bootstrap' \r\n\r\nclass Siswa extends React.Component {\r\n    constructor() {  \r\n        super();  \r\n        this.state = {  \r\n          token:\"\",\r\n            siswa: [],\r\n            jur:[],\r\n            id_siswa:\"\",\r\n            nis:\"\",\r\n            nama_siswa:\"\",\r\n            kelas:\"\",\r\n            jurusan:\"\",\r\n            poin:\"\",\r\n            search:\"\",\r\n            action:\"\",\r\n          isModalOpen: false\r\n        }\r\n        if (localStorage.getItem(\"token\")) {\r\n          this.state.token = localStorage.getItem(\"token\")\r\n      } else {\r\n          window.location = \"/login\"\r\n      }\r\n\r\n      this.headerConfig.bind(this)\r\n}\r\nheaderConfig = () => {\r\n  let header = {\r\n      headers: { Authorization: `Bearer ${this.state.token}` }\r\n  }\r\n  return header\r\n}\r\n\r\n    bind = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n    handleAdd = () => {\r\n        this.setState({\r\n            id_siswa:\"\",\r\n            nis:\"\",\r\n            nama_siswa:\"\",\r\n            kelas:\"\",\r\n            jurusan:\"\",\r\n            poin:\"\",\r\n            search:\"\",\r\n            action:\"\",\r\n                    action: \"insert\",\r\n                    isModalOpen: true\r\n        })\r\n    }\r\n    handleEdit = (item) => {\r\n        this.setState({\r\n                    id_siswa: item.id_siswa,\r\n                    nis: item.nis,\r\n                    nama_siswa: item.nama_siswa,\r\n                    kelas: item.kelas,\r\n                    jurusan: item.jurusan,\r\n                    poin: item.poin,\r\n                    action: \"update\",\r\n                    isModalOpen: true\r\n        })\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            isModalOpen: false\r\n        })\r\n    }\r\n    handleSave = (event) => {\r\n        event.preventDefault();\r\n        /* menampung data nid, nama dan poin dari Form\r\n        ke dalam FormData() untuk dikirim  */\r\n        let url = \"\";\r\n        if (this.state.action === \"insert\") {\r\n          url = \"http://localhost:2910/siswa/save\"\r\n        } else {\r\n          url = \"http://localhost:2910/siswa/update\"\r\n        }\r\n        let form = {\r\n            id_siswa: this.state.id_siswa,\r\n            nis: this.state.nis,\r\n            nama_siswa: this.state.nama_siswa,\r\n            kelas: this.state.kelas,\r\n            jurusan: this.state.jurusan,\r\n            poin: this.state.poin\r\n          }\r\n          // mengirim data ke API untuk disimpan pada database\r\n          axios.post(url, form, this.headerConfig())\r\n          .then(response => {\r\n          // jika proses simpan berhasil, memanggil data yang terbaru\r\n          this.getsiswa();\r\n          })\r\n          this.setState({\r\n            isModalOpen: false\r\n        })\r\n        }\r\n    getsiswa = () => {\r\n        let url = \"http://localhost:2910/siswa\";\r\n        // mengakses api untuk mengambil data siswa\r\n        axios.get(url, this.headerConfig())\r\n        .then(response => {\r\n          // mengisikan data dari respon API ke array siswa\r\n          this.setState({siswa: response.data.siswa});\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    getjurusan = () => {\r\n      let url = \"http://localhost:2910/siswa/jurusan\";\r\n      // mengakses api untuk mengambil data siswa\r\n      axios.get(url, this.headerConfig())\r\n      .then(response => {\r\n        // mengisikan data dari respon API ke array siswa\r\n        this.setState({jur: response.data.jurusan});\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n    componentDidMount(){\r\n        // method yang pertama kali dipanggil pada saat load page\r\n        this.getsiswa()\r\n        this.getjurusan()\r\n    }\r\n    findsiswa = (event) => {\r\n        let url = \"http://localhost:2910/siswa\";\r\n        if (event.keyCode === 13) {\r\n        //   menampung data keyword pencarian\r\n          let form = {\r\n            find: this.state.search\r\n          }\r\n          // mengakses api untuk mengambil data siswa\r\n          // berdasarkan keyword\r\n          axios.post(url, form, this.headerConfig())\r\n          .then(response => {\r\n            // mengisikan data dari respon API ke array siswa\r\n            this.setState({siswa: response.data.siswa});\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n        }\r\n    }\r\n    Drop = (id_siswa) => {\r\n        let url = \"http://localhost:2910/siswa/\" + id_siswa;\r\n        // memanggil url API untuk menghapus data pada database\r\n        if (window.confirm('Apakah Anda yakin ingin menghapus data ini?')) {\r\n          axios.delete(url, this.headerConfig())\r\n          .then(response => {\r\n            // jika proses hapus data berhasil, memanggil data yang terbaru\r\n            this.getsiswa();\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n        }\r\n    }\r\n    render(){\r\n        console.log(this.state.jur)\r\n        return(\r\n            <>\r\n            <NavBar />\r\n            <Card>\r\n                <Card.Header className=\"card-header bg-info text-white\" align={'center'}>Data siswa</Card.Header>\r\n                <Card.Body>\r\n                <input type=\"text\" className=\"form-control mb-2\" name=\"search\" value={this.state.search} onChange={this.bind} onKeyUp={this.findsiswa} placeholder=\"Pencarian...\" />\r\n                <Button variant=\"success\" onClick={this.handleAdd}>\r\n                    Tambah Data\r\n                </Button>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>  \r\n                            <th>NIS</th> \r\n                            <th>Nama Siswa</th> \r\n                            <th>Kelas</th> \r\n                            <th>Jurusan</th>  \r\n                            <th>Poin</th>  \r\n                            <th>Option</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.siswa.map((item,index) => {  \r\n                        return (  \r\n                        <tr key={index}>  \r\n                            <td>{item.id_siswa}</td>  \r\n                            <td>{item.nis}</td>\r\n                            <td>{item.nama_siswa}</td>  \r\n                            <td>{item.kelas}</td>\r\n                            <td>{item.nama_jurusan}</td>\r\n                            <td>{item.poin}</td>  \r\n                            <td>  \r\n                            <Button className=\"btn btn-sm btn-info m-1\" data-toggle=\"modal\"  \r\n                            data-target=\"#modal\" onClick={() => this.handleEdit(item)}>  \r\n                                Edit  \r\n                            </Button>  \r\n                            <Button className=\"btn btn-sm btn-danger m-1\" onClick={() => this.Drop(item.id_siswa)}>  \r\n                                Hapus  \r\n                            </Button>  \r\n                            </td>  \r\n                        </tr>  \r\n                        );  \r\n                    })}\r\n                    </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n                </Card>\r\n\r\n                \r\n                <Modal show={this.state.isModalOpen} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Form siswa</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Form onSubmit={this.handleSave}>\r\n                    <Modal.Body>\r\n        \r\n                    ID  <input type=\"number\" name=\"id_siswa\" value={this.state.id_siswa} onChange={this.bind}  \r\n                        className=\"form-control\" required />  \r\n                        NIS\r\n                        <input type=\"text\" name=\"nis\" value={this.state.nis} onChange={this.bind}  \r\n                        className=\"form-control\" required />  \r\n                        Nama siswa\r\n                        <input type=\"text\" name=\"nama_siswa\" value={this.state.nama_siswa} onChange={this.bind}  \r\n                        className=\"form-control\" required />  \r\n                        Kelas\r\n                        <input type=\"text\" name=\"kelas\" value={this.state.kelas} onChange={this.bind}  \r\n                        className=\"form-control\" required />  \r\n                        Jurusan\r\n                            <select name=\"jurusan\" value={this.state.jurusan} onChange={this.bind} className=\"form-control\" required>\r\n                              {this.state.jur.map((item)=> {  \r\n                              return ( <option value={item.id_jurusan}>{item.nama_jurusan}</option> )})}\r\n                            </select>  \r\n\r\n                        Poin  \r\n                        <input type=\"number\" name=\"poin\" value={this.state.poin} onChange={this.bind}  \r\n                        className=\"form-control\" required />  \r\n                        \r\n                    </Modal.Body>\r\n                     <Modal.Footer>\r\n                     <button className=\"btn-primary btn-sm\" type=\"submit\">  \r\n                     Simpan \r\n                     </button>\r\n                    </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n    );  \r\n  }\r\n}\r\n\r\n\r\nexport default Siswa","C:\\Semester2\\new2\\react1\\src\\pages\\Jurusan.js",[],"C:\\Semester2\\new2\\react1\\src\\pages\\pelanggaran_siswa.js",["72","73"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport NavBar from '../components/navbar'\r\nimport {Button,Modal, Table, Card, Form} from 'react-bootstrap' \r\nimport dateFormat from 'dateformat';\r\n\r\nclass PelanggaranSiswa extends React.Component {\r\n    constructor() {  \r\n        super();  \r\n        this.state = {\r\n            token: \"\",\r\n            siswa: [],\r\n            pelanggaran: [],\r\n            pelanggaran_siswa: [],\r\n            detail_pelanggaran_siswa: [],\r\n            list_pelanggaran: [],\r\n            id_pelanggaran_siswa: \"\",\r\n            id_pelanggaran: \"\",\r\n            isModal1Open: false,\r\n            isModal2Open: false,\r\n            isModal3Open: false\r\n        }  \r\n        if (localStorage.getItem(\"token\")) {\r\n            this.state.token = localStorage.getItem(\"token\")\r\n        } else {\r\n            window.location = \"/login\"\r\n        }\r\n        this.headerConfig.bind(this)\r\n    }\r\n    headerConfig = () => {\r\n        let header = {\r\n            headers: { Authorization: `Bearer ${this.state.token}` }\r\n        }\r\n        return header\r\n    }\r\n    bind = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n    getSiswa = () => {\r\n        let url = \"http://localhost:2910/siswa\";\r\n        // mengakses api untuk mengambil data siswa\r\n        axios.get(url, this.headerConfig())\r\n        .then(response => {\r\n          // mengisikan data dari respon API ke array siswa\r\n          this.setState({siswa: response.data.siswa});\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    getPelanggaran = () => {\r\n        let url = \"http://localhost:2910/pelanggaran\";\r\n        // mengakses api untuk mengambil data pelanggaran\r\n        axios.get(url, this.headerConfig())\r\n        .then(response => {\r\n          // mengisikan data dari respon API ke array pelanggaran\r\n          this.setState({pelanggaran: response.data.pelanggaran});\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    getPelanggaranSiswa = () => {\r\n        let url = \"http://localhost:2910/pelanggaran_siswa\";\r\n        // mengakses api untuk mengambil data pelanggaran\r\n        axios.get(url, this.headerConfig())\r\n        .then(response => {\r\n          // mengisikan data dari respon API ke array pelanggaran\r\n          this.setState({pelanggaran_siswa: response.data.pelanggaran_siswa});\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    componentDidMount(){  \r\n        this.getPelanggaranSiswa();  \r\n        this.getSiswa();  \r\n        this.getPelanggaran();  \r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            isModal1Open: false,\r\n            isModal2Open: false,\r\n            isModal3Open: false\r\n        })\r\n    }\r\n    handleDetail = (id_pelanggaran_siswa) => {\r\n        let url = \"http://localhost:2910/detail_pelanggaran_siswa/ \" + id_pelanggaran_siswa;\r\n        // mengakses api untuk mengambil data pelanggaran\r\n        axios.get(url, this.headerConfig())\r\n        .then(response => {\r\n          // mengisikan data dari respon API ke array pelanggaran\r\n          this.setState({detail_pelanggaran_siswa: response.data.detail_pelanggaran_siswa});\r\n          this.setState({id_pelanggaran_siswa: id_pelanggaran_siswa, isModal1Open:true})\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    addPelanggaran = () => {\r\n        this.setState({\r\n            id_pelanggaran: \"\",\r\n            isModal1Open: false,\r\n            isModal2Open: true\r\n        })\r\n    }\r\n\r\n    savePelanggaran = (event) => {\r\n        event.preventDefault();\r\n        let url = \"http://localhost:2910/detail_pelanggaran_siswa\";\r\n        let id = this.state.id_pelanggaran_siswa\r\n        let form = {\r\n          id_pelanggaran_siswa: id,\r\n          id_pelanggaran: this.state.id_pelanggaran\r\n        }\r\n    \r\n        // mengirim data ke API untuk disimpan pada database\r\n        axios.post(url, form, this.headerConfig())\r\n        .then(response => {\r\n          // jika proses simpan berhasil, memanggil data yang terbaru\r\n          this.handleDetail(id);\r\n          // menutup form modal\r\n            this.setState({\r\n            isModal2Open: false\r\n        })\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    dropPelanggaran = (item) => {\r\n        this.setState({isModal1Open: false})\r\n        let url = \"http://localhost:2910/detail_pelanggaran_siswa/\" + item.id_pelanggaran_siswa + \"/\" + item.id_pelanggaran;\r\n        // memanggil url API untuk menghapus data pada database\r\n        if (window.confirm('Apakah Anda yakin ingin menghapus data ini?')) {\r\n          axios.delete(url, this.headerConfig())\r\n          .then(response => {\r\n            // jika proses hapus data berhasil, memanggil data yang terbaru\r\n            this.handleDetail(item.id_pelanggaran_siswa);\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n        }\r\n    }\r\n    handleAdd = () => {  \r\n        this.setState({  \r\n            id_siswa: \"\",  \r\n            id_pelanggaran: \"\",  \r\n            list_pelanggaran: [],\r\n            isModal3Open: true  \r\n        });  \r\n    }\r\n    \r\n    addList = () => {  \r\n        if (this.state.id_pelanggaran !== \"\") {  \r\n        let id = this.state.id_pelanggaran;\r\n        let item = this.state.pelanggaran.find(itm => itm.id_pelanggaran == id);  \r\n        console.log(item);  \r\n        let temp = this.state.list_pelanggaran;  \r\n        temp.push(item);  \r\n        this.setState({list_pelanggaran: temp});  \r\n        }  \r\n    }\r\n    \r\n    dropList = (index) => {  \r\n        let temp = this.state.list_pelanggaran;  \r\n        temp.splice(index,1);  \r\n        this.setState({list_pelanggaran: temp});  \r\n    }\r\n    \r\n    handleSave = (event) => {  \r\n        event.preventDefault();  \r\n        let url = \"http://localhost:2910/pelanggaran_siswa/save\";  \r\n        // ambil data user dari local storage  \r\n        let user = JSON.parse(localStorage.getItem(\"user\"));\r\n        let form = {\r\n            id_siswa: this.state.id_siswa,\r\n            id_user: user[0].id_user,\r\n            pelanggaran: JSON.stringify(this.state.list_pelanggaran)\r\n        }\r\n        axios.post(url, form, this.headerConfig())  \r\n        .then(response => {    \r\n            this.getPelanggaranSiswa();  \r\n            this.setState({list_pelanggaran: [], isModal3Open: false});    \r\n        })  \r\n        .catch(error => {  \r\n            console.log(error);  \r\n        });  \r\n    }\r\n    handleDrop = (id_pelanggaran_siswa) => {\r\n        let url = \"http://localhost:2910/pelanggaran_siswa/\" + id_pelanggaran_siswa;\r\n        // memanggil url API untuk menghapus data pada database\r\n        if (window.confirm('Apakah Anda yakin ingin menghapus data ini?')) {\r\n            axios.delete(url, this.headerConfig())\r\n            .then(response => {\r\n            // jika proses hapus data berhasil, memanggil data yang terbaru\r\n            this.setState({message: response.data.message});  \r\n            this.getPelanggaranSiswa();\r\n            })\r\n            .catch(error => {\r\n            console.log(error);\r\n            });\r\n        }    \r\n    }        \r\n    render(){\r\n        return(\r\n            <>\r\n                <NavBar />\r\n                <Card>\r\n                <Card.Header className=\"card-header bg-info text-white\" align={'center'}>Data Pelanggaran Siswa</Card.Header>\r\n                <Card.Body>\r\n                    <Button variant=\"success\" onClick={this.handleAdd}>\r\n                        Tambah Data\r\n                    </Button>\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                            <td>Tanggal</td>\r\n                            <td>NIS</td> \r\n                            <td>Nama Siswa</td>  \r\n                            <td>Nama Petugas</td>\r\n                            <td>Option</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        { this.state.pelanggaran_siswa.map(item => {  \r\n                        return(  \r\n                            <tr key={item.id_pelanggaran_siswa}>  \r\n                            <td>{dateFormat(item.waktu)}</td>\r\n                            <td>{item.nis}</td>  \r\n                            <td>{item.nama_siswa}</td>\r\n                            <td>{item.username}</td>\r\n                            <td>\r\n                                <Button className=\"btn btn-sm btn-info m-1\" \r\n                                onClick={() => this.handleDetail(item.id_pelanggaran_siswa)}> Detail </Button>\r\n                                <Button className=\"btn btn-sm btn-danger m-1\" \r\n                                onClick={() => this.handleDrop(item.id_pelanggaran_siswa)}> Hapus </Button> \r\n                            </td>  \r\n                            </tr>  \r\n                        );  \r\n                        }) }\r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n                </Card>\r\n                {/* Modal Detail Pelanggaran */}\r\n                <Modal show={this.state.isModal1Open} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Detail Pelanggaran Siswa</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Button variant=\"success\" onClick={() => this.addPelanggaran()}>\r\n                            Tambah Data\r\n                        </Button>\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                <td>Id</td>  \r\n                                <td>Pelanggaran</td>  \r\n                                <td>Poin</td>\r\n                                <td>Option</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                { this.state.detail_pelanggaran_siswa.map(it => {  \r\n                                    return(  \r\n                                    <tr key={it.id_pelanggaran_siswa}>\r\n                                        <td>{it.id_pelanggaran}</td>\r\n                                        <td>{it.nama_pelanggaran}</td>  \r\n                                        <td>{it.poin}</td>\r\n                                        <td>  \r\n                                            <Button className=\"btn btn-sm btn-danger m-1\" onClick={() => this.dropPelanggaran(it)}>  \r\n                                                Hapus  \r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                    );  \r\n                                }) }\r\n                            </tbody>\r\n                        </Table> \r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                {/* Modal Add Pelanggaran */}\r\n                <Modal show={this.state.isModal2Open} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Form Tambah Pelanggaran</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Form onSubmit={this.savePelanggaran}>\r\n                        <Modal.Body>\r\n                            Pilih Pelanggaran  \r\n                            <select name=\"id_pelanggaran\" className=\"form-control\"  \r\n                            value={this.state.id_pelanggaran}  \r\n                            onChange={this.bind} required>  \r\n                            <option value=\"\">-- Pilih Pelanggaran --</option>  \r\n                                { this.state.pelanggaran.map(item => {  \r\n                                    return (  \r\n                                    <option key={item.id_pelanggaran} value={item.id_pelanggaran}>  \r\n                                        {item.nama_pelanggaran}  \r\n                                    </option>  \r\n                                    );  \r\n                                }) }  \r\n                            </select>  \r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <button className=\"btn btn-sm btn-success\" type=\"submit\">  \r\n                                Simpan  \r\n                            </button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n                {/* Modal Add Data Pelanggaran Siswa*/}\r\n                <Modal show={this.state.isModal3Open} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Form Pelanggaran Siswa</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Form onSubmit={this.handleSave}>\r\n                        <Modal.Body>\r\n                        Nama Siswa  \r\n                            <select name=\"id_siswa\" className=\"form-control\" value={this.state.id_siswa}  \r\n                            onChange={this.bind} required>  \r\n                            <option value=\"\">-- Pilih Siswa --</option>  \r\n                                { this.state.siswa.map(item => {  \r\n                                    return (  \r\n                                    <option key={item.id_siswa} value={item.id_siswa}>  \r\n                                        {item.nama_siswa}  \r\n                                    </option>  \r\n                                    );  \r\n                                }) }  \r\n                            </select>  \r\n                            Pilih Pelanggaran  \r\n                            <select name=\"id_pelanggaran\" className=\"form-control\"  \r\n                            value={this.state.id_pelanggaran}  \r\n                            onChange={this.bind} required>  \r\n                            <option value=\"\">-- Pilih Pelanggaran --</option>  \r\n                                { this.state.pelanggaran.map(item => {  \r\n                                    return (  \r\n                                    <option key={item.id_pelanggaran} value={item.id_pelanggaran}>  \r\n                                        {item.nama_pelanggaran}  \r\n                                    </option>  \r\n                                    );  \r\n                                }) }  \r\n                            </select>  \r\n                            <button type=\"button\" className=\"btn btn-block btn-sm btn-primary my-1\"  \r\n                            onClick={() => this.addList()}> Tambahkan Pelanggaran </button>  \r\n                            Jenis Pelanggaran: <br />  \r\n                            <ul>  \r\n                                {this.state.list_pelanggaran.map((item,index) => {  \r\n                                    return (  \r\n                                    <li key={item.id_pelanggaran+index}>  \r\n                                        {item.nama_pelanggaran}  \r\n                                        [<a className=\"text-danger\" onClick={() => this.dropList(index)}>X</a>]  \r\n                                    </li>  \r\n                                    );  \r\n                                })}  \r\n                            </ul>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <button className=\"btn btn-sm btn-success\" type=\"submit\">  \r\n                                Simpan  \r\n                            </button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}    \r\n\r\nexport default PelanggaranSiswa ",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":16},{"ruleId":"78","severity":1,"message":"82","line":5,"column":9,"nodeType":"80","messageId":"81","endLine":5,"endColumn":15},{"ruleId":"78","severity":1,"message":"83","line":5,"column":17,"nodeType":"80","messageId":"81","endLine":5,"endColumn":20},{"ruleId":"84","severity":1,"message":"85","line":51,"column":21,"nodeType":"86","messageId":"87","endLine":51,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":158,"column":74,"nodeType":"90","messageId":"87","endLine":158,"endColumn":76},{"ruleId":"91","severity":1,"message":"92","line":354,"column":42,"nodeType":"93","endLine":354,"endColumn":106},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Nav' is defined but never used.","no-dupe-keys","Duplicate key 'action'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]